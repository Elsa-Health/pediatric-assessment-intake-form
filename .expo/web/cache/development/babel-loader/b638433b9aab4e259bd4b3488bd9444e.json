{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/List/ListSubheader.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar ListSubheader = function (_React$Component) {\n  _inherits(ListSubheader, _React$Component);\n\n  function ListSubheader() {\n    _classCallCheck(this, ListSubheader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListSubheader).apply(this, arguments));\n  }\n\n  _createClass(ListSubheader, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"style\", \"theme\"]);\n\n      var colors = theme.colors,\n          fonts = theme.fonts;\n      var font = fonts.medium;\n      var textColor = color(colors.text).alpha(0.54).rgb().string();\n      return React.createElement(Text, _extends({\n        numberOfLines: 1\n      }, rest, {\n        style: [styles.container, _objectSpread({\n          color: textColor\n        }, font), style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }));\n    }\n  }]);\n\n  return ListSubheader;\n}(React.Component);\n\nListSubheader.displayName = 'List.Subheader';\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13\n  }\n});\nexport default withTheme(ListSubheader);","map":{"version":3,"sources":["ListSubheader.tsx"],"names":["ListSubheader","React","Component","displayName","style","theme","rest","colors","fonts","font","textColor","color","styles","StyleSheet","container","paddingHorizontal","paddingVertical","withTheme"],"mappings":";;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;AAEA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,IAAA;AACA,SAAA,SAAA;;AA+BMA,IAAAA,a;;;;;;;;;;;6BAGK;AAAA,UAAA,WAAA,GAC2B,KAD3B,KAAA;AAAA,UACCI,KADD,GAAA,WAAA,CAAA,KAAA;AAAA,UACQC,KADR,GAAA,WAAA,CAAA,KAAA;AAAA,UACkBC,IADlB,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,UAECC,MAFD,GAEmBF,KAFnB,CAAA,MAAA;AAAA,UAESG,KAFT,GAEmBH,KAFnB,CAAA,KAAA;AAGP,UAAMI,IAAI,GAAGD,KAAK,CAAlB,MAAA;AACA,UAAME,SAAS,GAAGC,KAAK,CAACJ,MAAM,CAAZI,IAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAlB,MAAkBA,EAAlB;AAKA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,QAAA,aAAa,EADf;AAAA,OAAA,EAAA,IAAA,EAAA;AAGE,QAAA,KAAK,EAAE,CAACC,MAAM,CAAP,SAAA,EAAA,aAAA,CAAA;AAAqBD,UAAAA,KAAK,EAA1B;AAAA,SAAA,EAAA,IAAA,CAAA,EAHT,KAGS,CAHT;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADF;AACE;AAAA,OAAA,CAAA,CADF;;;;;EAZwBV,KAAK,CAACC,S,CAA5BF;;AAAAA,a,CACGG,WADHH,GACiB,gBADjBA;AAsBN,IAAMY,MAAM,GAAGC,UAAU,CAAVA,MAAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,iBAAiB,EADR,EAAA;AAETC,IAAAA,eAAe,EAHnB;AACa;AADoB,CAAlBH,CAAf;AAOA,eAAeI,SAAS,CAAxB,aAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * class MyComponent extends React.Component {\n *  render () {\n *    return <List.Subheader>My List Title</List.Subheader>;\n *  }\n * }\n *\n * export default MyComponent;\n * ```\n */\nclass ListSubheader extends React.Component<Props> {\n  static displayName = 'List.Subheader';\n\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const font = fonts.medium;\n    const textColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n\n    return (\n      <Text\n        numberOfLines={1}\n        {...rest}\n        style={[styles.container, { color: textColor, ...font }, style]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default withTheme(ListSubheader);\n"]},"metadata":{},"sourceType":"module"}