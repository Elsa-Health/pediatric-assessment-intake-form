{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/FAB/FABGroup.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport FAB from \"./FAB\";\nimport Text from \"../Typography/Text\";\nimport Card from \"../Card/Card\";\nimport { withTheme } from \"../../core/theming\";\n\nvar FABGroup = function (_React$Component) {\n  _inherits(FABGroup, _React$Component);\n\n  function FABGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FABGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FABGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      backdrop: new Animated.Value(0),\n      animations: []\n    };\n\n    _this.close = function () {\n      return _this.props.onStateChange({\n        open: false\n      });\n    };\n\n    _this.toggle = function () {\n      return _this.props.onStateChange({\n        open: !_this.props.open\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FABGroup, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.open === prevProps.open) {\n        return;\n      }\n\n      var scale = this.props.theme.animation.scale;\n\n      if (this.props.open) {\n        Animated.parallel([Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true\n        }), Animated.stagger(50 * scale, this.state.animations.map(function (animation) {\n          return Animated.timing(animation, {\n            toValue: 1,\n            duration: 150 * scale,\n            useNativeDriver: true\n          });\n        }).reverse())]).start();\n      } else {\n        Animated.parallel([Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true\n        })].concat(_toConsumableArray(this.state.animations.map(function (animation) {\n          return Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true\n          });\n        })))).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          actions = _this$props.actions,\n          icon = _this$props.icon,\n          open = _this$props.open,\n          _onPress = _this$props.onPress,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          fabStyle = _this$props.fabStyle,\n          visible = _this$props.visible;\n      var colors = theme.colors;\n      var labelColor = theme.dark ? colors.text : color(colors.text).fade(0.54).rgb().string();\n      var backdropOpacity = open ? this.state.backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1]\n      }) : this.state.backdrop;\n      var opacities = this.state.animations;\n      var scales = opacities.map(function (opacity) {\n        return open ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1]\n        }) : 1;\n      });\n      return React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        }\n      }, React.createElement(Animated.View, {\n        pointerEvents: open ? 'auto' : 'none',\n        style: [styles.backdrop, {\n          opacity: backdropOpacity,\n          backgroundColor: colors.backdrop\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        }\n      })), React.createElement(SafeAreaView, {\n        pointerEvents: \"box-none\",\n        style: styles.safeArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        }\n      }, React.createElement(View, {\n        pointerEvents: open ? 'box-none' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        }\n      }, actions.map(function (it, i) {\n        return React.createElement(View, {\n          key: i,\n          style: styles.item,\n          pointerEvents: \"box-none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          }\n        }, it.label && React.createElement(Card, {\n          style: [styles.label, {\n            transform: [{\n              scale: scales[i]\n            }],\n            opacity: opacities[i]\n          }],\n          onPress: function onPress() {\n            it.onPress();\n\n            _this2.close();\n          },\n          accessibilityLabel: it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n          accessibilityTraits: \"button\",\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: labelColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          }\n        }, it.label)), React.createElement(FAB, {\n          small: true,\n          icon: it.icon,\n          color: it.color,\n          style: [{\n            transform: [{\n              scale: scales[i]\n            }],\n            opacity: opacities[i],\n            backgroundColor: theme.colors.surface\n          }, it.style],\n          onPress: function onPress() {\n            it.onPress();\n\n            _this2.close();\n          },\n          accessibilityLabel: typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n          accessibilityTraits: \"button\",\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          }\n        }));\n      })), React.createElement(FAB, {\n        onPress: function onPress() {\n          _onPress == null ? void 0 : _onPress();\n\n          _this2.toggle();\n        },\n        icon: icon,\n        color: this.props.color,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityTraits: \"button\",\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        style: [styles.fab, fabStyle],\n        visible: visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        }\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        animations: nextProps.actions.map(function (_, i) {\n          return prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0);\n        })\n      };\n    }\n  }]);\n\n  return FABGroup;\n}(React.Component);\n\nFABGroup.displayName = 'FAB.Group';\nexport default withTheme(FABGroup);\nexport { FABGroup };\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["FABGroup.tsx"],"names":["FABGroup","React","Component","displayName","nextProps","prevState","animations","Animated","state","backdrop","prevProps","scale","toValue","duration","useNativeDriver","close","open","toggle","actions","icon","onPress","accessibilityLabel","theme","style","fabStyle","visible","colors","labelColor","color","backdropOpacity","inputRange","outputRange","opacities","scales","opacity","styles","backgroundColor","it","transform","withTheme","StyleSheet","safeArea","alignItems","container","justifyContent","fab","marginHorizontal","marginBottom","marginTop","label","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","item","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\nimport { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    onPress: () => void;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  backdrop: Animated.Value;\n  animations: Animated.Value[];\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     open: false,\n *   };\n *\n *   render() {\n *     return (\n *       <Provider>\n *          <Portal>\n *            <FAB.Group\n *              open={this.state.open}\n *              icon={this.state.open ? 'today' : 'add'}\n *              actions={[\n *                { icon: 'add', onPress: () => console.log('Pressed add') },\n *                { icon: 'star', label: 'Star', onPress: () => console.log('Pressed star')},\n *                { icon: 'email', label: 'Email', onPress: () => console.log('Pressed email') },\n *                { icon: 'bell', label: 'Remind', onPress: () => console.log('Pressed notifications') },\n *              ]}\n *              onStateChange={({ open }) => this.setState({ open })}\n *              onPress={() => {\n *                if (this.state.open) {\n *                  // do something if the speed dial is open\n *                }\n *              }}\n *            />\n *          </Portal>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nclass FABGroup extends React.Component<Props, State> {\n  static displayName = 'FAB.Group';\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    return {\n      animations: nextProps.actions.map(\n        (_, i) =>\n          prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0)\n      ),\n    };\n  }\n\n  state: State = {\n    backdrop: new Animated.Value(0),\n    animations: [],\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.open === prevProps.open) {\n      return;\n    }\n\n    const { scale } = this.props.theme.animation;\n    if (this.props.open) {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50 * scale,\n          this.state.animations\n            .map(animation =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...this.state.animations.map(animation =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }\n\n  private close = () => this.props.onStateChange({ open: false });\n\n  private toggle = () => this.props.onStateChange({ open: !this.props.open });\n\n  render() {\n    const {\n      actions,\n      icon,\n      open,\n      onPress,\n      accessibilityLabel,\n      theme,\n      style,\n      fabStyle,\n      visible,\n    } = this.props;\n    const { colors } = theme;\n\n    const labelColor = theme.dark\n      ? colors.text\n      : color(colors.text)\n          .fade(0.54)\n          .rgb()\n          .string();\n    const backdropOpacity = open\n      ? this.state.backdrop.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [0, 1, 1],\n        })\n      : this.state.backdrop;\n\n    const opacities = this.state.animations;\n    const scales = opacities.map(opacity =>\n      open\n        ? opacity.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0.8, 1],\n          })\n        : 1\n    );\n\n    return (\n      <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n        <TouchableWithoutFeedback onPress={this.close}>\n          <Animated.View\n            pointerEvents={open ? 'auto' : 'none'}\n            style={[\n              styles.backdrop,\n              {\n                opacity: backdropOpacity,\n                backgroundColor: colors.backdrop,\n              },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n        <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n          <View pointerEvents={open ? 'box-none' : 'none'}>\n            {actions.map((it, i) => (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={styles.item}\n                pointerEvents=\"box-none\"\n              >\n                {it.label && (\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      this.close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: labelColor }}>{it.label}</Text>\n                  </Card>\n                )}\n                <FAB\n                  small\n                  icon={it.icon}\n                  color={it.color}\n                  style={\n                    [\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                        backgroundColor: theme.colors.surface,\n                      },\n                      it.style,\n                    ] as StyleProp<ViewStyle>\n                  }\n                  onPress={() => {\n                    it.onPress();\n                    this.close();\n                  }}\n                  accessibilityLabel={\n                    typeof it.accessibilityLabel !== 'undefined'\n                      ? it.accessibilityLabel\n                      : it.label\n                  }\n                  accessibilityTraits=\"button\"\n                  accessibilityComponentType=\"button\"\n                  accessibilityRole=\"button\"\n                />\n              </View>\n            ))}\n          </View>\n          <FAB\n            onPress={() => {\n              onPress?.();\n              this.toggle();\n            }}\n            icon={icon}\n            color={this.props.color}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityTraits=\"button\"\n            accessibilityComponentType=\"button\"\n            accessibilityRole=\"button\"\n            style={[styles.fab, fabStyle]}\n            visible={visible}\n          />\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nexport { FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}