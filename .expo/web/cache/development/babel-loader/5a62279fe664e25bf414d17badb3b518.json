{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ghms3c/Desktop/Projects/pediatric-assessment-intake-form/components/PatientInformation.tsx\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Table, Row, Col, FitTextToCell, Input, SimpleQuestion } from '.';\nimport { styles } from \"../style\";\nexport function PatientInformation() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      dob = _useState2[0],\n      setDob = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      years = _useState4[0],\n      setYears = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mos = _useState6[0],\n      setMos = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      days = _useState8[0],\n      setDays = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      residence = _useState10[0],\n      setResidence = _useState10[1];\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      gender = _React$useState2[0],\n      setGender = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      medicalCondition = _React$useState4[0],\n      setMedicalCondition = _React$useState4[1];\n\n  var _useState11 = useState({\n    dob: \"\",\n    years: 0,\n    mos: 0,\n    days: 0\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      info = _useState12[0],\n      setInfo = _useState12[1];\n\n  return React.createElement(Table, {\n    headerTitle: \"Patient Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Col, {\n    cols: 3,\n    style: styles.headerLightGray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"DOB (dd/mm/yy)\")), React.createElement(Col, {\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, React.createElement(FitTextToCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    text: dob,\n    setText: function setText(text) {\n      console.log(\"info here:\", text);\n      setDob(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }))), React.createElement(Col, {\n    style: styles.headerLightGray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Age\"), React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(FitTextToCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    label: \"Years\",\n    placeholder: \"Years\",\n    text: years,\n    setText: function setText(text) {\n      console.log(\"info here:\", text);\n      setYears(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }))), React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, React.createElement(FitTextToCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    label: \"Mos\",\n    placeholder: \"Mos\",\n    text: mos,\n    setText: function setText(text) {\n      console.log(\"info here:\", text);\n      setMos(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }))), React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, React.createElement(FitTextToCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    label: \"Days\",\n    placeholder: \"Days\",\n    text: days,\n    setText: function setText(text) {\n      console.log(\"info here:\", text);\n      setDays(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  })))), React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(Col, {\n    cols: 1,\n    style: styles.headerLightGray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Sex\")), React.createElement(Col, {\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(SimpleQuestion, {\n    options: [\"male\", \"female\"],\n    checked: gender,\n    setChecked: setGender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), React.createElement(Col, {\n    cols: 3,\n    style: styles.headerLightGray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Residency Location\"), React.createElement(Col, {\n    cols: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, React.createElement(FitTextToCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    text: residence,\n    setText: function setText(text) {\n      console.log(\"Residence:\", text);\n      setResidence(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  })))), React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, React.createElement(Col, {\n    cols: 4,\n    style: styles.headerLightGray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Any known medical condition?\"), React.createElement(Text, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"(Sc/Diabetes/HIV/Cardiac/Asthma /Other_)\")), React.createElement(Col, {\n    cols: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, React.createElement(FitTextToCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    text: medicalCondition,\n    setText: function setText(text) {\n      console.log(\"Medical Condition :\", text);\n      setMedicalCondition(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/ghms3c/Desktop/Projects/pediatric-assessment-intake-form/components/PatientInformation.tsx"],"names":["React","useState","Table","Row","Col","FitTextToCell","Input","SimpleQuestion","styles","PatientInformation","dob","setDob","years","setYears","mos","setMos","days","setDays","residence","setResidence","gender","setGender","medicalCondition","setMedicalCondition","info","setInfo","headerLightGray","text","console","log"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport {Text} from 'react-native'\nimport {Table,Row,Col,FitTextToCell,Input,SimpleQuestion} from '.'\nimport {styles } from '../style'\n\nexport function PatientInformation() {\n    // const [info, setInfo] = useAtom(patientInfo);\n  \n    //will migrate local state to gloabl state\n    const [dob, setDob] = useState(\"\");\n    const [years, setYears] = useState(0);\n    const [mos, setMos] = useState(0);\n    const [days, setDays] = useState(0);\n    const [residence, setResidence] = useState(\"\");\n  \n    //state for gender\n    const [gender, setGender] = React.useState(\"\");\n  \n    //state for medical conditions\n    const [medicalCondition, setMedicalCondition] = React.useState(\"\");\n  \n    //this is strange why updating does not work\n    //  setText={(text) => {\n    //               console.log('info here:', text);\n    //               setInfo({dob:text,...info})\n    //             }}\n    const [info, setInfo] = useState({\n      dob: \"\",\n      years: 0,\n      mos: 0,\n      days: 0,\n    });\n  \n    return (\n      <Table headerTitle=\"Patient Information\">\n        <Row>\n          <Col cols={3} style={styles.headerLightGray}>\n            <Text style={{}}>DOB (dd/mm/yy)</Text>\n          </Col>\n          <Col cols={3}>\n            <FitTextToCell>\n              <Input\n                text={dob}\n                setText={(text) => {\n                  console.log(\"info here:\", text);\n                  setDob(text);\n                }}\n              />\n            </FitTextToCell>\n          </Col>\n          <Col style={styles.headerLightGray}>Age</Col>\n          <Col>\n            <FitTextToCell>\n              <Input\n                label=\"Years\"\n                placeholder=\"Years\"\n                text={years}\n                setText={(text) => {\n                  console.log(\"info here:\", text);\n                  setYears(text);\n                }}\n              />\n            </FitTextToCell>\n          </Col>\n          <Col>\n            <FitTextToCell>\n              <Input\n                label=\"Mos\"\n                placeholder=\"Mos\"\n                text={mos}\n                setText={(text) => {\n                  console.log(\"info here:\", text);\n                  setMos(text);\n                }}\n              />\n            </FitTextToCell>\n          </Col>\n          <Col>\n            <FitTextToCell>\n              <Input\n                label=\"Days\"\n                placeholder=\"Days\"\n                text={days}\n                setText={(text) => {\n                  console.log(\"info here:\", text);\n                  setDays(text);\n                }}\n              />\n            </FitTextToCell>\n          </Col>\n        </Row>\n  \n        <Row>\n          <Col cols={1} style={styles.headerLightGray}>\n            <Text>Sex</Text>\n          </Col>\n          <Col cols={3}>\n            <SimpleQuestion\n              options={[\"male\", \"female\"]}\n              checked={gender}\n              setChecked={setGender}\n            />\n          </Col>\n          <Col cols={3} style={styles.headerLightGray}>\n            Residency Location\n          </Col>\n          <Col cols={4}>\n            <FitTextToCell>\n              <Input\n                text={residence}\n                setText={(text) => {\n                  console.log(\"Residence:\", text);\n                  setResidence(text);\n                }}\n              />\n            </FitTextToCell>\n          </Col>\n        </Row>\n  \n        <Row>\n          <Col cols={4} style={styles.headerLightGray}>\n            <Text style={{}}>Any known medical condition?</Text>\n            <Text style={{}}>(Sc/Diabetes/HIV/Cardiac/Asthma /Other_)</Text>\n          </Col>\n          <Col cols={8}>\n            <FitTextToCell>\n              <Input\n                text={medicalCondition}\n                setText={(text) => {\n                  console.log(\"Medical Condition :\", text);\n                  setMedicalCondition(text);\n                }}\n              />\n            </FitTextToCell>\n          </Col>\n        </Row>\n      </Table>\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}