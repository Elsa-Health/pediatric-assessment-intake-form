{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Card/CardTitle.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../../core/theming\";\nimport Caption from \"./../Typography/Caption\";\nimport Title from \"./../Typography/Title\";\nvar LEFT_SIZE = 40;\n\nvar CardTitle = function (_React$Component) {\n  _inherits(CardTitle, _React$Component);\n\n  function CardTitle() {\n    _classCallCheck(this, CardTitle);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardTitle).apply(this, arguments));\n  }\n\n  _createClass(CardTitle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          left = _this$props.left,\n          leftStyle = _this$props.leftStyle,\n          right = _this$props.right,\n          rightStyle = _this$props.rightStyle,\n          subtitle = _this$props.subtitle,\n          subtitleStyle = _this$props.subtitleStyle,\n          style = _this$props.style,\n          title = _this$props.title,\n          titleStyle = _this$props.titleStyle;\n      return React.createElement(View, {\n        style: [styles.container, {\n          height: subtitle || left || right ? 72 : 50\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        }\n      }, left ? React.createElement(View, {\n        style: [styles.left, leftStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }, left({\n        size: LEFT_SIZE\n      })) : null, React.createElement(View, {\n        style: [styles.titles],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        }\n      }, title ? React.createElement(Title, {\n        style: [styles.title, {\n          marginBottom: subtitle ? 0 : 2\n        }, titleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        }\n      }, title) : null, subtitle ? React.createElement(Caption, {\n        style: [styles.subtitle, subtitleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        }\n      }, subtitle) : null), React.createElement(View, {\n        style: rightStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        }\n      }, right ? right({\n        size: 24\n      }) : null));\n    }\n  }]);\n\n  return CardTitle;\n}(React.Component);\n\nCardTitle.displayName = 'Card.Title';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16\n  },\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE\n  },\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: 50\n  },\n  title: {\n    minHeight: 30\n  },\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0\n  }\n});\nexport default withTheme(CardTitle);\nexport { CardTitle };","map":{"version":3,"sources":["CardTitle.tsx"],"names":["LEFT_SIZE","CardTitle","React","Component","displayName","left","leftStyle","right","rightStyle","subtitle","subtitleStyle","style","title","titleStyle","styles","height","size","marginBottom","StyleSheet","container","flexDirection","alignItems","justifyContent","paddingLeft","marginRight","width","titles","flex","minHeight","marginVertical","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport Caption from './../Typography/Caption';\nimport Title from './../Typography/Title';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Text for the title. Note that this will only accept a string or `<Text>`-based node.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Text for the subtitle. Note that this will only accept a string or `<Text>`-based node.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the left element wrapper.\n   */\n  leftStyle?: StyleProp<ViewStyle>;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { size: number }) => React.ReactNode;\n  /**\n   * Style for the right element wrapper.\n   */\n  rightStyle?: StyleProp<ViewStyle>;\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nconst LEFT_SIZE = 40;\n\n/**\n * A component to show a title, subtitle and an avatar inside a Card.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-title-1.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Card, IconButton } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card.Title\n *     title=\"Card Title\"\n *     subtitle=\"Card Subtitle\"\n *     left={(props) => <Avatar.Icon {...props} icon=\"folder\" />}\n *     right={(props) => <IconButton {...props} icon=\"more-vert\" onPress={() => {}} />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass CardTitle extends React.Component<Props> {\n  static displayName = 'Card.Title';\n\n  render() {\n    const {\n      left,\n      leftStyle,\n      right,\n      rightStyle,\n      subtitle,\n      subtitleStyle,\n      style,\n      title,\n      titleStyle,\n    } = this.props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          { height: subtitle || left || right ? 72 : 50 },\n          style,\n        ]}\n      >\n        {left ? (\n          <View style={[styles.left, leftStyle]}>\n            {left({\n              size: LEFT_SIZE,\n            })}\n          </View>\n        ) : null}\n\n        <View style={[styles.titles]}>\n          {title ? (\n            <Title\n              style={[\n                styles.title,\n                { marginBottom: subtitle ? 0 : 2 },\n                titleStyle,\n              ]}\n              numberOfLines={1}\n            >\n              {title}\n            </Title>\n          ) : null}\n\n          {subtitle ? (\n            <Caption style={[styles.subtitle, subtitleStyle]} numberOfLines={1}>\n              {subtitle}\n            </Caption>\n          ) : null}\n        </View>\n\n        <View style={rightStyle}>{right ? right({ size: 24 }) : null}</View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 16,\n  },\n\n  left: {\n    justifyContent: 'center',\n    marginRight: 16,\n    height: LEFT_SIZE,\n    width: LEFT_SIZE,\n  },\n\n  titles: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: 50,\n  },\n\n  title: {\n    minHeight: 30,\n  },\n\n  subtitle: {\n    minHeight: 20,\n    marginVertical: 0,\n  },\n});\n\nexport default withTheme(CardTitle);\n\n// @component-docs ignore-next-line\nexport { CardTitle };\n"]},"metadata":{},"sourceType":"module"}