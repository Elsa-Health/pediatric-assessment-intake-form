{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Menu/Menu.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { withTheme } from \"../../core/theming\";\nimport Portal from \"../Portal/Portal\";\nimport Surface from \"../Surface\";\nimport MenuItem from \"./MenuItem\";\nimport { APPROX_STATUSBAR_HEIGHT } from \"../../constants\";\nvar SCREEN_INDENT = 8;\nvar ANIMATION_DURATION = 250;\nvar EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\nvar Menu = function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rendered: _this.props.visible,\n      top: 0,\n      left: 0,\n      menuLayout: {\n        width: 0,\n        height: 0\n      },\n      anchorLayout: {\n        width: 0,\n        height: 0\n      },\n      opacityAnimation: new Animated.Value(0),\n      scaleAnimation: new Animated.ValueXY({\n        x: 0,\n        y: 0\n      })\n    };\n    _this.anchor = null;\n    _this.menu = null;\n\n    _this.isAnchorCoord = function () {\n      return !React.isValidElement(_this.props.anchor);\n    };\n\n    _this.measureMenuLayout = function () {\n      return new Promise(function (resolve) {\n        if (_this.menu) {\n          _this.menu.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    };\n\n    _this.measureAnchorLayout = function () {\n      return new Promise(function (resolve) {\n        var anchor = _this.props.anchor;\n\n        if (_this.isAnchorCoord()) {\n          resolve({\n            x: anchor.x,\n            y: anchor.y,\n            width: 0,\n            height: 0\n          });\n          return;\n        }\n\n        if (_this.anchor) {\n          _this.anchor.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    };\n\n    _this.updateVisibility = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Promise.resolve());\n\n            case 2:\n              if (_this.props.visible) {\n                _this.show();\n              } else {\n                _this.hide();\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.isBrowser = function () {\n      return Platform.OS === 'web' && 'document' in global;\n    };\n\n    _this.focusFirstDOMNode = function (el) {\n      if (el && _this.isBrowser()) {\n        var node = findNodeHandle(el);\n        var focusableNode = node.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        focusableNode == null ? void 0 : focusableNode.focus();\n      }\n    };\n\n    _this.handleDismiss = function () {\n      if (_this.props.visible) {\n        _this.props.onDismiss();\n      }\n\n      return true;\n    };\n\n    _this.handleKeypress = function (e) {\n      if (e.key === 'Escape') {\n        _this.props.onDismiss();\n      }\n    };\n\n    _this.attachListeners = function () {\n      BackHandler.addEventListener('hardwareBackPress', _this.handleDismiss);\n      Dimensions.addEventListener('change', _this.handleDismiss);\n      _this.isBrowser() && document.addEventListener('keyup', _this.handleKeypress);\n    };\n\n    _this.removeListeners = function () {\n      BackHandler.removeEventListener('hardwareBackPress', _this.handleDismiss);\n      Dimensions.removeEventListener('change', _this.handleDismiss);\n      _this.isBrowser() && document.removeEventListener('keyup', _this.handleKeypress);\n    };\n\n    _this.show = function _callee2() {\n      var windowLayout, _ref, _ref2, menuLayout, anchorLayout;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              windowLayout = Dimensions.get('window');\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([_this.measureMenuLayout(), _this.measureAnchorLayout()]));\n\n            case 3:\n              _ref = _context2.sent;\n              _ref2 = _slicedToArray(_ref, 2);\n              menuLayout = _ref2[0];\n              anchorLayout = _ref2[1];\n\n              if (!(!windowLayout.width || !windowLayout.height || !menuLayout.width || !menuLayout.height || !anchorLayout.width && !_this.isAnchorCoord() || !anchorLayout.height && !_this.isAnchorCoord())) {\n                _context2.next = 10;\n                break;\n              }\n\n              requestAnimationFrame(_this.show);\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              _this.setState(function () {\n                return {\n                  left: anchorLayout.x,\n                  top: anchorLayout.y,\n                  anchorLayout: {\n                    height: anchorLayout.height,\n                    width: anchorLayout.width\n                  },\n                  menuLayout: {\n                    width: menuLayout.width,\n                    height: menuLayout.height\n                  }\n                };\n              }, function () {\n                _this.attachListeners();\n\n                var animation = _this.props.theme.animation;\n                Animated.parallel([Animated.timing(_this.state.scaleAnimation, {\n                  toValue: {\n                    x: menuLayout.width,\n                    y: menuLayout.height\n                  },\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                }), Animated.timing(_this.state.opacityAnimation, {\n                  toValue: 1,\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                })]).start(function (_ref3) {\n                  var finished = _ref3.finished;\n\n                  if (finished) {\n                    _this.focusFirstDOMNode(_this.menu);\n                  }\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.hide = function () {\n      _this.removeListeners();\n\n      var animation = _this.props.theme.animation;\n      Animated.timing(_this.state.opacityAnimation, {\n        toValue: 0,\n        duration: ANIMATION_DURATION * animation.scale,\n        easing: EASING,\n        useNativeDriver: true\n      }).start(function (finished) {\n        if (finished) {\n          _this.setState({\n            menuLayout: {\n              width: 0,\n              height: 0\n            }\n          });\n\n          _this.state.scaleAnimation.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this.focusFirstDOMNode(_this.anchor);\n\n          _this.setState({\n            rendered: false\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.updateVisibility();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          anchor = _this$props.anchor,\n          contentStyle = _this$props.contentStyle,\n          style = _this$props.style,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          statusBarHeight = _this$props.statusBarHeight,\n          onDismiss = _this$props.onDismiss;\n      var _this$state = this.state,\n          rendered = _this$state.rendered,\n          menuLayout = _this$state.menuLayout,\n          anchorLayout = _this$state.anchorLayout,\n          opacityAnimation = _this$state.opacityAnimation,\n          scaleAnimation = _this$state.scaleAnimation;\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top;\n      var additionalVerticalValue = Platform.select({\n        android: statusBarHeight,\n        default: 0\n      });\n      var scaleTransforms = [{\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1]\n        })\n      }, {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1]\n        })\n      }];\n      var windowLayout = Dimensions.get('window');\n      var positionTransforms = [];\n\n      if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [-(menuLayout.width / 2), 0]\n          })\n        });\n\n        if (left < SCREEN_INDENT) {\n          left = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [menuLayout.width / 2, 0]\n          })\n        });\n        left += anchorLayout.width - menuLayout.width;\n        var right = left + menuLayout.width;\n\n        if (right > windowLayout.width - SCREEN_INDENT) {\n          left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n        }\n      }\n\n      var scrollableMenuHeight = 0;\n\n      if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        scrollableMenuHeight = windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n      } else if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top >= windowLayout.height - top && top <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue) {\n        scrollableMenuHeight = top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n      }\n\n      scrollableMenuHeight = scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT ? windowLayout.height - 2 * SCREEN_INDENT : scrollableMenuHeight;\n\n      if (top <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue || top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0]\n          })\n        });\n\n        if (top < SCREEN_INDENT) {\n          top = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0]\n          })\n        });\n        top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n        var bottom = top + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;\n\n        if (bottom > windowLayout.height - SCREEN_INDENT) {\n          top = scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT ? -SCREEN_INDENT * 2 : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;\n        }\n      }\n\n      var shadowMenuContainerStyle = _objectSpread({\n        opacity: opacityAnimation,\n        transform: scaleTransforms,\n        borderRadius: theme.roundness\n      }, scrollableMenuHeight ? {\n        height: scrollableMenuHeight\n      } : {});\n\n      var positionStyle = _objectSpread({\n        top: this.isAnchorCoord() ? top : top + additionalVerticalValue\n      }, I18nManager.isRTL ? {\n        right: left\n      } : {\n        left: left\n      });\n\n      return React.createElement(View, {\n        ref: function ref(_ref5) {\n          _this2.anchor = _ref5;\n        },\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        }\n      }, this.isAnchorCoord() ? null : anchor, rendered ? React.createElement(Portal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        }\n      }, React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        }\n      })), React.createElement(View, {\n        ref: function ref(_ref4) {\n          _this2.menu = _ref4;\n        },\n        collapsable: false,\n        accessibilityViewIsModal: visible,\n        style: [styles.wrapper, positionStyle, style],\n        pointerEvents: visible ? 'box-none' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          transform: positionTransforms\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        }\n      }, React.createElement(Surface, {\n        style: [styles.shadowMenuContainer, shadowMenuContainerStyle, contentStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        }\n      }, scrollableMenuHeight && React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        }\n      }, children) || React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        }\n      }, children))))) : null);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nMenu.Item = MenuItem;\nMenu.defaultProps = {\n  statusBarHeight: APPROX_STATUSBAR_HEIGHT\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute'\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8\n  }\n});\nexport default withTheme(Menu);","map":{"version":3,"sources":["Menu.tsx"],"names":["SCREEN_INDENT","ANIMATION_DURATION","EASING","Easing","Menu","React","Component","Item","MenuItem","defaultProps","statusBarHeight","nextProps","prevState","rendered","state","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Animated","scaleAnimation","x","y","prevProps","anchor","menu","isAnchorCoord","measureMenuLayout","resolve","measureAnchorLayout","updateVisibility","Promise","isBrowser","Platform","focusFirstDOMNode","el","node","findNodeHandle","focusableNode","handleDismiss","handleKeypress","e","attachListeners","BackHandler","Dimensions","document","removeListeners","show","windowLayout","requestAnimationFrame","animation","toValue","duration","easing","useNativeDriver","finished","hide","visible","contentStyle","style","children","theme","onDismiss","additionalVerticalValue","android","default","scaleTransforms","scaleX","inputRange","outputRange","scaleY","positionTransforms","translateX","right","scrollableMenuHeight","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","positionStyle","I18nManager","StyleSheet","styles","wrapper","position","shadowMenuContainer","paddingVertical","elevation","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  Animated,\n  BackHandler,\n  Dimensions,\n  Easing,\n  I18nManager,\n  LayoutRectangle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  ScrollView,\n  findNodeHandle,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport { Theme, $Omit } from '../../types';\nimport Portal from '../Portal/Portal';\nimport Surface from '../Surface';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport MenuItem, { MenuItem as _MenuItem } from './MenuItem';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = {\n  /**\n   * Whether the Menu is currently visible.\n   */\n  visible: boolean;\n  /**\n   * The anchor to open the menu from. In most cases, it will be a button that opens the menu.\n   */\n  anchor: React.ReactNode | { x: number; y: number };\n  /**\n   * Extra margin to add at the top of the menu to account for translucent status bar on Android.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to and customize it.\n   * This is automatically handled on iOS.\n   */\n  statusBarHeight?: number;\n  /**\n   * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Content of the `Menu`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style of menu's inner content.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype Layout = $Omit<$Omit<LayoutRectangle, 'x'>, 'y'>;\n\ntype State = {\n  rendered: boolean;\n  top: number;\n  left: number;\n  menuLayout: Layout;\n  anchorLayout: Layout;\n  opacityAnimation: Animated.Value;\n  scaleAnimation: Animated.ValueXY;\n};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _openMenu = () => this.setState({ visible: true });\n *\n *   _closeMenu = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Provider>\n *         <View\n *           style={{\n *             paddingTop: 50,\n *             flexDirection: 'row',\n *             justifyContent: 'center'\n *           }}>\n *           <Menu\n *             visible={this.state.visible}\n *             onDismiss={this._closeMenu}\n *             anchor={\n *               <Button onPress={this._openMenu}>Show menu</Button>\n *             }\n *           >\n *             <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *             <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *             <Divider />\n *             <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *           </Menu>\n *         </View>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nclass Menu extends React.Component<Props, State> {\n  // @component ./MenuItem.tsx\n  static Item = MenuItem;\n\n  static defaultProps = {\n    statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return { rendered: true };\n    }\n\n    return null;\n  }\n\n  state = {\n    rendered: this.props.visible,\n    top: 0,\n    left: 0,\n    menuLayout: { width: 0, height: 0 },\n    anchorLayout: { width: 0, height: 0 },\n    opacityAnimation: new Animated.Value(0),\n    scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.updateVisibility();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  private anchor?: View | null = null;\n  private menu?: View | null = null;\n\n  private isAnchorCoord = () => !React.isValidElement(this.props.anchor);\n\n  private measureMenuLayout = () =>\n    new Promise<LayoutRectangle>(resolve => {\n      if (this.menu) {\n        this.menu.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private measureAnchorLayout = () =>\n    new Promise<LayoutRectangle>(resolve => {\n      const { anchor } = this.props;\n      if (this.isAnchorCoord()) {\n        // @ts-ignore\n        resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\n        return;\n      }\n\n      if (this.anchor) {\n        this.anchor.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private updateVisibility = async () => {\n    // Menu is rendered in Portal, which updates items asynchronously\n    // We need to do the same here so that the ref is up-to-date\n    await Promise.resolve();\n\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private isBrowser = () => Platform.OS === 'web' && 'document' in global;\n\n  private focusFirstDOMNode = (el: View | null | undefined) => {\n    if (el && this.isBrowser()) {\n      // When in the browser, we want to focus the first focusable item on toggle\n      // For example, when menu is shown, focus the first item in the menu\n      // And when menu is dismissed, send focus back to the button to resume tabbing\n      const node: any = findNodeHandle(el);\n      const focusableNode = node.querySelector(\n        // This is a rough list of selectors that can be focused\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n\n      focusableNode?.focus();\n    }\n  };\n\n  private handleDismiss = () => {\n    if (this.props.visible) {\n      this.props.onDismiss();\n    }\n    return true;\n  };\n\n  private handleKeypress = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.props.onDismiss();\n    }\n  };\n\n  private attachListeners = () => {\n    BackHandler.addEventListener('hardwareBackPress', this.handleDismiss);\n    Dimensions.addEventListener('change', this.handleDismiss);\n\n    this.isBrowser() && document.addEventListener('keyup', this.handleKeypress);\n  };\n\n  private removeListeners = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleDismiss);\n    Dimensions.removeEventListener('change', this.handleDismiss);\n\n    this.isBrowser() &&\n      document.removeEventListener('keyup', this.handleKeypress);\n  };\n\n  private show = async () => {\n    const windowLayout = Dimensions.get('window');\n    const [menuLayout, anchorLayout] = await Promise.all([\n      this.measureMenuLayout(),\n      this.measureAnchorLayout(),\n    ]);\n\n    // When visible is true for first render\n    // native views can be still not rendered and\n    // measureMenuLayout/measureAnchorLayout functions\n    // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n    // so we have to wait until views are ready\n    // and rerun this function to show menu\n    if (\n      !windowLayout.width ||\n      !windowLayout.height ||\n      !menuLayout.width ||\n      !menuLayout.height ||\n      (!anchorLayout.width && !this.isAnchorCoord()) ||\n      (!anchorLayout.height && !this.isAnchorCoord())\n    ) {\n      requestAnimationFrame(this.show);\n      return;\n    }\n\n    this.setState(\n      () => ({\n        left: anchorLayout.x,\n        top: anchorLayout.y,\n        anchorLayout: {\n          height: anchorLayout.height,\n          width: anchorLayout.width,\n        },\n        menuLayout: {\n          width: menuLayout.width,\n          height: menuLayout.height,\n        },\n      }),\n      () => {\n        this.attachListeners();\n\n        const { animation } = this.props.theme;\n        Animated.parallel([\n          Animated.timing(this.state.scaleAnimation, {\n            toValue: { x: menuLayout.width, y: menuLayout.height },\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n          Animated.timing(this.state.opacityAnimation, {\n            toValue: 1,\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            this.focusFirstDOMNode(this.menu);\n          }\n        });\n      }\n    );\n  };\n\n  private hide = () => {\n    this.removeListeners();\n\n    const { animation } = this.props.theme;\n    Animated.timing(this.state.opacityAnimation, {\n      toValue: 0,\n      duration: ANIMATION_DURATION * animation.scale,\n      easing: EASING,\n      useNativeDriver: true,\n    }).start(finished => {\n      if (finished) {\n        this.setState({ menuLayout: { width: 0, height: 0 } });\n        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n        this.focusFirstDOMNode(this.anchor);\n        this.setState({ rendered: false });\n      }\n    });\n  };\n\n  render() {\n    const {\n      visible,\n      anchor,\n      contentStyle,\n      style,\n      children,\n      theme,\n      statusBarHeight,\n      onDismiss,\n    } = this.props;\n\n    const {\n      rendered,\n      menuLayout,\n      anchorLayout,\n      opacityAnimation,\n      scaleAnimation,\n    } = this.state;\n\n    let { left, top } = this.state;\n\n    // I don't know why but on Android measure function is wrong by 24\n    const additionalVerticalValue = Platform.select({\n      android: statusBarHeight,\n      default: 0,\n    });\n\n    const scaleTransforms = [\n      {\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1],\n        }),\n      },\n      {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1],\n        }),\n      },\n    ];\n\n    const windowLayout = Dimensions.get('window');\n\n    // We need to translate menu while animating scale to imitate transform origin for scale animation\n    const positionTransforms = [];\n\n    // Check if menu fits horizontally and if not align it to right.\n    if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [-(menuLayout.width / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from left side\n      if (left < SCREEN_INDENT) {\n        left = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [menuLayout.width / 2, 0],\n        }),\n      });\n\n      left += anchorLayout.width - menuLayout.width;\n\n      const right = left + menuLayout.width;\n      // Check if menu position has enough space from right side\n      if (right > windowLayout.width - SCREEN_INDENT) {\n        left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n      }\n    }\n\n    // If the menu is larger than available vertical space,\n    // calculate the height of scrollable view\n    let scrollableMenuHeight = 0;\n\n    // Check if the menu should be scrollable\n    if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And bottom side of the screen has more space than top side\n      top <= windowLayout.height - top\n    ) {\n      // Scrollable menu should be below the anchor (expands downwards)\n      scrollableMenuHeight =\n        windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n    } else if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And top side of the screen has more space than bottom side\n      top >= windowLayout.height - top &&\n      // And menu overflows from top side\n      top <=\n        menuLayout.height -\n          anchorLayout.height +\n          SCREEN_INDENT -\n          additionalVerticalValue\n    ) {\n      // Scrollable menu should be above the anchor (expands upwards)\n      scrollableMenuHeight =\n        top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n    }\n\n    // Scrollable menu max height\n    scrollableMenuHeight =\n      scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\n        ? windowLayout.height - 2 * SCREEN_INDENT\n        : scrollableMenuHeight;\n\n    // Menu is typically positioned below the element that generates it\n    // So first check if it fits below the anchor (expands downwards)\n    if (\n      // Check if menu fits vertically\n      top <=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue ||\n      // Or if the menu overflows from bottom side\n      (top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n        // And bottom side of the screen has more space than top side\n        top <= windowLayout.height - top)\n    ) {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from top side\n      if (top < SCREEN_INDENT) {\n        top = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\n        }),\n      });\n\n      top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n\n      const bottom =\n        top +\n        (scrollableMenuHeight || menuLayout.height) +\n        additionalVerticalValue;\n\n      // Check if menu position has enough space from bottom side\n      if (bottom > windowLayout.height - SCREEN_INDENT) {\n        top =\n          scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\n            ? -SCREEN_INDENT * 2\n            : windowLayout.height -\n              menuLayout.height -\n              SCREEN_INDENT -\n              additionalVerticalValue;\n      }\n    }\n\n    const shadowMenuContainerStyle = {\n      opacity: opacityAnimation,\n      transform: scaleTransforms,\n      borderRadius: theme.roundness,\n      ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\n    };\n\n    const positionStyle = {\n      top: this.isAnchorCoord() ? top : top + additionalVerticalValue,\n      ...(I18nManager.isRTL ? { right: left } : { left }),\n    };\n\n    return (\n      <View\n        ref={ref => {\n          this.anchor = ref;\n        }}\n        collapsable={false}\n      >\n        {this.isAnchorCoord() ? null : anchor}\n        {rendered ? (\n          <Portal>\n            <TouchableWithoutFeedback onPress={onDismiss}>\n              <View style={StyleSheet.absoluteFill} />\n            </TouchableWithoutFeedback>\n            <View\n              ref={ref => {\n                this.menu = ref;\n              }}\n              collapsable={false}\n              accessibilityViewIsModal={visible}\n              style={[styles.wrapper, positionStyle, style]}\n              pointerEvents={visible ? 'box-none' : 'none'}\n            >\n              <Animated.View style={{ transform: positionTransforms }}>\n                <Surface\n                  style={\n                    [\n                      styles.shadowMenuContainer,\n                      shadowMenuContainerStyle,\n                      contentStyle,\n                    ] as StyleProp<ViewStyle>\n                  }\n                >\n                  {(scrollableMenuHeight && (\n                    <ScrollView>{children}</ScrollView>\n                  )) || <React.Fragment>{children}</React.Fragment>}\n                </Surface>\n              </Animated.View>\n            </View>\n          </Portal>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8,\n  },\n});\n\nexport default withTheme(Menu);\n"]},"metadata":{},"sourceType":"module"}