{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTableTitle.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableTitle = function (_React$Component) {\n  _inherits(DataTableTitle, _React$Component);\n\n  function DataTableTitle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DataTableTitle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DataTableTitle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      spinAnim: new Animated.Value(_this.props.sortDirection === 'ascending' ? 0 : 1)\n    };\n    return _this;\n  }\n\n  _createClass(DataTableTitle, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.sortDirection === this.props.sortDirection) {\n        return;\n      }\n\n      Animated.timing(this.state.spinAnim, {\n        toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n        duration: 150,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          numeric = _this$props.numeric,\n          children = _this$props.children,\n          onPress = _this$props.onPress,\n          sortDirection = _this$props.sortDirection,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          numberOfLines = _this$props.numberOfLines,\n          rest = _objectWithoutProperties(_this$props, [\"numeric\", \"children\", \"onPress\", \"sortDirection\", \"theme\", \"style\", \"numberOfLines\"]);\n\n      var textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n      var spin = this.state.spinAnim.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '180deg']\n      });\n      var icon = sortDirection ? React.createElement(Animated.View, {\n        style: [styles.icon, {\n          transform: [{\n            rotate: spin\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, React.createElement(MaterialCommunityIcon, {\n        name: \"arrow-down\",\n        size: 16,\n        color: theme.colors.text,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      })) : null;\n      return React.createElement(TouchableWithoutFeedback, _extends({\n        disabled: !onPress,\n        onPress: onPress\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }), React.createElement(View, {\n        style: [styles.container, numeric && styles.right, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      }, icon, React.createElement(Text, {\n        style: [styles.cell, sortDirection ? styles.sorted : {\n          color: textColor\n        }],\n        numberOfLines: numberOfLines,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      }, children)));\n    }\n  }]);\n\n  return DataTableTitle;\n}(React.Component);\n\nDataTableTitle.displayName = 'DataTable.Title';\nDataTableTitle.defaultProps = {\n  numberOfLines: 1\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\nexport default withTheme(DataTableTitle);\nexport { DataTableTitle };","map":{"version":3,"sources":["DataTableTitle.tsx"],"names":["DataTableTitle","React","Component","displayName","defaultProps","numberOfLines","state","spinAnim","Animated","prevProps","toValue","duration","useNativeDriver","numeric","children","onPress","sortDirection","theme","style","rest","textColor","color","spin","inputRange","outputRange","icon","styles","transform","rotate","I18nManager","StyleSheet","container","flex","flexDirection","alignContent","paddingVertical","right","justifyContent","cell","height","lineHeight","fontSize","fontWeight","alignItems","sorted","marginLeft","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  spinAnim: Animated.Value;\n};\n\nclass DataTableTitle extends React.Component<Props, State> {\n  static displayName = 'DataTable.Title';\n\n  static defaultProps = {\n    numberOfLines: 1,\n  };\n\n  state = {\n    spinAnim: new Animated.Value(\n      this.props.sortDirection === 'ascending' ? 0 : 1\n    ),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.sortDirection === this.props.sortDirection) {\n      return;\n    }\n\n    Animated.timing(this.state.spinAnim, {\n      toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const {\n      numeric,\n      children,\n      onPress,\n      sortDirection,\n      theme,\n      style,\n      numberOfLines,\n      ...rest\n    } = this.props;\n\n    const textColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '180deg'],\n    });\n\n    const icon = sortDirection ? (\n      <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n        <MaterialCommunityIcon\n          name=\"arrow-down\"\n          size={16}\n          color={theme.colors.text}\n          direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n        />\n      </Animated.View>\n    ) : null;\n\n    return (\n      <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n        <View style={[styles.container, numeric && styles.right, style]}>\n          {icon}\n\n          <Text\n            style={[\n              styles.cell,\n              sortDirection ? styles.sorted : { color: textColor },\n            ]}\n            numberOfLines={numberOfLines}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"module"}