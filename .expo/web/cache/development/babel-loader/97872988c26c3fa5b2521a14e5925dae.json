{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Checkbox.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport CheckboxAndroid from \"./CheckboxAndroid\";\nimport CheckboxIOS from \"./CheckboxIOS\";\nimport { withTheme } from \"../core/theming\";\n\nvar Checkbox = function (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Checkbox).apply(this, arguments));\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      return Platform.OS === 'ios' ? React.createElement(CheckboxIOS, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      })) : React.createElement(CheckboxAndroid, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }));\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\n\nCheckbox.Android = CheckboxAndroid;\nCheckbox.IOS = CheckboxIOS;\nexport default withTheme(Checkbox);","map":{"version":3,"sources":["Checkbox.tsx"],"names":["Checkbox","React","Component","Android","CheckboxAndroid","IOS","CheckboxIOS","Platform","withTheme"],"mappings":";;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;AAEA,OAAA,eAAA;AAKA,OAAA,WAAA;AACA,SAAA,SAAA;;AA0EMA,IAAAA,Q;;;;;;;;;;;6BAOK;AACP,aAAOO,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GACL,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EAAiB,KAAjB,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADKA;AACL;AAAA,OAAA,CAAA,CADKA,GAGL,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA,QAAA,CAAA,EAAA,EAAqB,KAArB,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAHF;AAGE;AAAA,OAAA,CAAA,CAHF;;;;;EARmBN,KAAK,CAACC,S,CAAvBF;;AAAAA,Q,CAEGG,OAFHH,GAEaI,eAFbJ;AAAAA,Q,CAKGK,GALHL,GAKSM,WALTN;AAgBN,eAAeQ,SAAS,CAAxB,QAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport CheckboxAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  CheckboxAndroid as _CheckboxAndroid,\n} from './CheckboxAndroid';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CheckboxIOS, { CheckboxIOS as _CheckboxIOS } from './CheckboxIOS';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: false,\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *     return (\n *       <Checkbox\n *         status={checked ? 'checked' : 'unchecked'}\n *         onPress={() => { this.setState({ checked: !checked }); }}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Checkbox extends React.Component<Props> {\n  // @component ./CheckboxAndroid.tsx\n  static Android = CheckboxAndroid;\n\n  // @component ./CheckboxIOS.tsx\n  static IOS = CheckboxIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <CheckboxIOS {...this.props} />\n    ) : (\n      <CheckboxAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"module"}