{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Card/CardCover.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { withTheme } from \"../../core/theming\";\nimport { grey200 } from \"../../styles/colors\";\n\nvar CardCover = function (_React$Component) {\n  _inherits(CardCover, _React$Component);\n\n  function CardCover() {\n    _classCallCheck(this, CardCover);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardCover).apply(this, arguments));\n  }\n\n  _createClass(CardCover, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          index = _this$props.index,\n          total = _this$props.total,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"index\", \"total\", \"style\", \"theme\"]);\n\n      var roundness = theme.roundness;\n      var coverStyle;\n\n      if (index === 0) {\n        if (total === 1) {\n          coverStyle = {\n            borderRadius: roundness\n          };\n        } else {\n          coverStyle = {\n            borderTopLeftRadius: roundness,\n            borderTopRightRadius: roundness\n          };\n        }\n      } else if (typeof total === 'number' && index === total - 1) {\n        coverStyle = {\n          borderBottomLeftRadius: roundness\n        };\n      }\n\n      return React.createElement(View, {\n        style: [styles.container, coverStyle, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, React.createElement(Image, _extends({}, rest, {\n        style: [styles.image, coverStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      })));\n    }\n  }]);\n\n  return CardCover;\n}(React.Component);\n\nCardCover.displayName = 'Card.Cover';\nvar styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden'\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n    resizeMode: 'cover'\n  }\n});\nexport default withTheme(CardCover);\nexport { CardCover };","map":{"version":3,"sources":["CardCover.tsx"],"names":["CardCover","React","Component","displayName","index","total","style","theme","rest","roundness","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","styles","StyleSheet","container","height","backgroundColor","overflow","image","flex","width","padding","justifyContent","resizeMode","withTheme"],"mappings":";;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAEA,SAAA,SAAA;AACA,SAAA,OAAA;;AAsCMA,IAAAA,S;;;;;;;;;;;6BAGK;AAAA,UAAA,WAAA,GACyC,KADzC,KAAA;AAAA,UACCI,KADD,GAAA,WAAA,CAAA,KAAA;AAAA,UACQC,KADR,GAAA,WAAA,CAAA,KAAA;AAAA,UACeC,KADf,GAAA,WAAA,CAAA,KAAA;AAAA,UACsBC,KADtB,GAAA,WAAA,CAAA,KAAA;AAAA,UACgCC,IADhC,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,UAECC,SAFD,GAEeF,KAFf,CAAA,SAAA;AAIP,UAAA,UAAA;;AAEA,UAAIH,KAAK,KAAT,CAAA,EAAiB;AACf,YAAIC,KAAK,KAAT,CAAA,EAAiB;AACfK,UAAAA,UAAU,GAAG;AACXC,YAAAA,YAAY,EADdD;AAAa,WAAbA;AADF,SAAA,MAIO;AACLA,UAAAA,UAAU,GAAG;AACXE,YAAAA,mBAAmB,EADR,SAAA;AAEXC,YAAAA,oBAAoB,EAFtBH;AAAa,WAAbA;AAKH;AAXD,OAAA,MAWO,IAAI,OAAA,KAAA,KAAA,QAAA,IAA6BN,KAAK,KAAKC,KAAK,GAAhD,CAAA,EAAsD;AAC3DK,QAAAA,UAAU,GAAG;AACXI,UAAAA,sBAAsB,EADxBJ;AAAa,SAAbA;AAKF;;AAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,QAAA,KAAK,EAAE,CAACK,MAAM,CAAP,SAAA,EAAA,UAAA,EAAb,KAAa,CAAb;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAiB,QAAA,KAAK,EAAE,CAACA,MAAM,CAAP,KAAA,EAAxB,UAAwB,CAAxB;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAFJ;AAEI;AAAA,OAAA,CAAA,CADF,CADF;;;;;EA1BoBd,KAAK,CAACC,S,CAAxBF;;AAAAA,S,CACGG,WADHH,GACiB,YADjBA;AAkCN,IAAMe,MAAM,GAAGC,UAAU,CAAVA,MAAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EADG,GAAA;AAETC,IAAAA,eAAe,EAFN,OAAA;AAGTC,IAAAA,QAAQ,EAJqB;AACpB,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EADC,CAAA;AAELJ,IAAAA,MAAM,EAFD,SAAA;AAGLK,IAAAA,KAAK,EAHA,SAAA;AAILC,IAAAA,OAAO,EAJF,EAAA;AAKLC,IAAAA,cAAc,EALT,UAAA;AAMLC,IAAAA,UAAU,EAZd;AAMS;AANwB,CAAlBV,CAAf;AAgBA,eAAeW,SAAS,CAAxB,SAAwB,CAAxB;AAGA,SAAA,SAAA","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Image, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof Image> & {\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to show a cover image inside a Card.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://facebook.github.io/react-native/docs/image.html#props\n */\nclass CardCover extends React.Component<Props> {\n  static displayName = 'Card.Cover';\n\n  render() {\n    const { index, total, style, theme, ...rest } = this.props;\n    const { roundness } = theme;\n\n    let coverStyle;\n\n    if (index === 0) {\n      if (total === 1) {\n        coverStyle = {\n          borderRadius: roundness,\n        };\n      } else {\n        coverStyle = {\n          borderTopLeftRadius: roundness,\n          borderTopRightRadius: roundness,\n        };\n      }\n    } else if (typeof total === 'number' && index === total - 1) {\n      coverStyle = {\n        borderBottomLeftRadius: roundness,\n      };\n    }\n\n    return (\n      <View style={[styles.container, coverStyle, style]}>\n        <Image {...rest} style={[styles.image, coverStyle]} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n    resizeMode: 'cover',\n  },\n});\n\nexport default withTheme(CardCover);\n\n// @component-docs ignore-next-line\nexport { CardCover };\n"]},"metadata":{},"sourceType":"module"}