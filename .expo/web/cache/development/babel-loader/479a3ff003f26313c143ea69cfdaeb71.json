{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTable.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DataTableCell from \"./DataTableCell\";\nimport DataTableHeader from \"./DataTableHeader\";\nimport DataTableTitle from \"./DataTableTitle\";\nimport DataTablePagination from \"./DataTablePagination\";\nimport DataTableRow from \"./DataTableRow\";\n\nvar DataTable = function (_React$Component) {\n  _inherits(DataTable, _React$Component);\n\n  function DataTable() {\n    _classCallCheck(this, DataTable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataTable).apply(this, arguments));\n  }\n\n  _createClass(DataTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"style\"]);\n\n      return React.createElement(View, _extends({}, rest, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }), children);\n    }\n  }]);\n\n  return DataTable;\n}(React.Component);\n\nDataTable.Header = DataTableHeader;\nDataTable.Title = DataTableTitle;\nDataTable.Row = DataTableRow;\nDataTable.Cell = DataTableCell;\nDataTable.Pagination = DataTablePagination;\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%'\n  }\n});\nexport default DataTable;","map":{"version":3,"sources":["DataTable.tsx"],"names":["DataTable","React","Component","Header","DataTableHeader","Title","DataTableTitle","Row","DataTableRow","Cell","DataTableCell","Pagination","DataTablePagination","children","style","rest","styles","StyleSheet","container","width"],"mappings":";;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,OAAA,aAAA;AACA,OAAA,eAAA;AAIA,OAAA,cAAA;AAIA,OAAA,mBAAA;AAKA,OAAA,YAAA;;AA2DMA,IAAAA,S;;;;;;;;;;;6BAgBK;AAAA,UAAA,WAAA,GAC8B,KAD9B,KAAA;AAAA,UACCa,QADD,GAAA,WAAA,CAAA,QAAA;AAAA,UACWC,KADX,GAAA,WAAA,CAAA,KAAA;AAAA,UACqBC,IADrB,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,UAAA,EAAA,OAAA,CAAA,CAAA;;AAGP,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAgB,QAAA,KAAK,EAAE,CAACC,MAAM,CAAP,SAAA,EAAvB,KAAuB,CAAvB;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EADF,QACE,CADF;;;;;EAnBoBf,KAAK,CAACC,S,CAAxBF;;AAAAA,S,CAEGG,MAFHH,GAEYI,eAFZJ;AAAAA,S,CAKGK,KALHL,GAKWM,cALXN;AAAAA,S,CAQGO,GARHP,GAQSQ,YARTR;AAAAA,S,CAWGS,IAXHT,GAWUU,aAXVV;AAAAA,S,CAcGW,UAdHX,GAcgBY,mBAdhBZ;AA2BN,IAAMgB,MAAM,GAAGC,UAAU,CAAVA,MAAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAFT;AACa;AADoB,CAAlBF,CAAf;AAMA,eAAA,SAAA","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport DataTableCell from './DataTableCell';\nimport DataTableHeader, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableHeader as _DataTableHeader,\n} from './DataTableHeader';\nimport DataTableTitle, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableTitle as _DataTableTitle,\n} from './DataTableTitle';\nimport DataTablePagination, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTablePagination as _DataTablePagination,\n} from './DataTablePagination';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport DataTableRow, { DataTableRow as _DataTableRow } from './DataTableRow';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Content of the `DataTable`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * Data tables allow displaying sets of data.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/data-table.png\" />\n *     <figcaption>Data table</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title>Dessert</DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat</DataTable.Title>\n *         </DataTable.Header>\n *\n *         <DataTable.Row>\n *           <DataTable.Cell>Frozen yogurt</DataTable.Cell>\n *           <DataTable.Cell numeric>159</DataTable.Cell>\n *           <DataTable.Cell numeric>6.0</DataTable.Cell>\n *         </DataTable.Row>\n *\n *         <DataTable.Row>\n *           <DataTable.Cell>Ice cream sandwich</DataTable.Cell>\n *           <DataTable.Cell numeric>237</DataTable.Cell>\n *           <DataTable.Cell numeric>8.0</DataTable.Cell>\n *         </DataTable.Row>\n *\n *         <DataTable.Pagination\n *           page={1}\n *           numberOfPages={3}\n *           onPageChange={(page) => { console.log(page); }}\n *           label=\"1-2 of 6\"\n *         />\n *       </DataTable>\n *     );\n *   }\n * }\n * ```\n */\nclass DataTable extends React.Component<Props> {\n  // @component ./DataTableHeader.tsx\n  static Header = DataTableHeader;\n\n  // @component ./DataTableTitle.tsx\n  static Title = DataTableTitle;\n\n  // @component ./DataTableRow.tsx\n  static Row = DataTableRow;\n\n  // @component ./DataTableCell.tsx\n  static Cell = DataTableCell;\n\n  // @component ./DataTablePagination.tsx\n  static Pagination = DataTablePagination;\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <View {...rest} style={[styles.container, style]}>\n        {children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n});\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}