{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Dialog/DialogTitle.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Title from \"../Typography/Title\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DialogTitle = function (_React$Component) {\n  _inherits(DialogTitle, _React$Component);\n\n  function DialogTitle() {\n    _classCallCheck(this, DialogTitle);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DialogTitle).apply(this, arguments));\n  }\n\n  _createClass(DialogTitle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"theme\", \"style\"]);\n\n      return React.createElement(Title, _extends({\n        accessibilityTraits: \"header\",\n        accessibilityRole: \"header\",\n        style: [styles.text, {\n          color: theme.colors.text\n        }, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }), children);\n    }\n  }]);\n\n  return DialogTitle;\n}(React.Component);\n\nDialogTitle.displayName = 'Dialog.Title';\nvar styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24\n  }\n});\nexport default withTheme(DialogTitle);\nexport { DialogTitle };","map":{"version":3,"sources":["DialogTitle.tsx"],"names":["DialogTitle","React","Component","displayName","children","theme","style","rest","styles","color","StyleSheet","text","marginTop","marginBottom","marginHorizontal","withTheme"],"mappings":";;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;AAEA,OAAA,KAAA;AACA,SAAA,SAAA;;AA+CMA,IAAAA,W;;;;;;;;;;;6BAGK;AAAA,UAAA,WAAA,GACqC,KADrC,KAAA;AAAA,UACCI,QADD,GAAA,WAAA,CAAA,QAAA;AAAA,UACWC,KADX,GAAA,WAAA,CAAA,KAAA;AAAA,UACkBC,KADlB,GAAA,WAAA,CAAA,KAAA;AAAA,UAC4BC,IAD5B,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AAGP,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,QAAA,mBAAmB,EADrB,QAAA;AAEE,QAAA,iBAAiB,EAFnB,QAAA;AAGE,QAAA,KAAK,EAAE,CAACC,MAAM,CAAP,IAAA,EAAc;AAAEC,UAAAA,KAAK,EAAEJ,KAAK,CAALA,MAAAA,CAAvB;AAAc,SAAd,EAHT,KAGS;AAHT,OAAA,EAAA,IAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EADF,QACE,CADF;;;;;EANsBJ,KAAK,CAACC,S,CAA1BF;;AAAAA,W,CACGG,WADHH,GACiB,cADjBA;AAmBN,IAAMQ,MAAM,GAAGE,UAAU,CAAVA,MAAAA,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EADL,EAAA;AAEJC,IAAAA,YAAY,EAFR,EAAA;AAGJC,IAAAA,gBAAgB,EAJpB;AACQ;AADyB,CAAlBJ,CAAf;AAQA,eAAeK,SAAS,CAAxB,WAAwB,CAAxB;AAGA,SAAA,WAAA","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport Title from '../Typography/Title';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof Title> & {\n  /**\n   * Title text for the `DialogTitle`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to show a title in a Dialog.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _hideDialog = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Portal>\n *         <Dialog\n *           visible={this.state.visible}\n *           onDismiss={this._hideDialog}>\n *           <Dialog.Title>This is a title</Dialog.Title>\n *           <Dialog.Content>\n *             <Paragraph>This is simple dialog</Paragraph>\n *           </Dialog.Content>\n *         </Dialog>\n *       </Portal>\n *     );\n *   }\n * }\n * ```\n */\nclass DialogTitle extends React.Component<Props> {\n  static displayName = 'Dialog.Title';\n\n  render() {\n    const { children, theme, style, ...rest } = this.props;\n\n    return (\n      <Title\n        accessibilityTraits=\"header\"\n        accessibilityRole=\"header\"\n        style={[styles.text, { color: theme.colors.text }, style]}\n        {...rest}\n      >\n        {children}\n      </Title>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24,\n  },\n});\n\nexport default withTheme(DialogTitle);\n\n// @component-docs ignore-next-line\nexport { DialogTitle };\n"]},"metadata":{},"sourceType":"module"}