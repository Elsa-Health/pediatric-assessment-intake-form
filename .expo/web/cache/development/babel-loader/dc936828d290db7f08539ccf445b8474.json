{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/RadioButton/RadioButtonGroup.tsx\";\nimport * as React from 'react';\nexport var RadioButtonContext = React.createContext(null);\n\nvar RadioButtonGroup = function (_React$Component) {\n  _inherits(RadioButtonGroup, _React$Component);\n\n  function RadioButtonGroup() {\n    _classCallCheck(this, RadioButtonGroup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RadioButtonGroup).apply(this, arguments));\n  }\n\n  _createClass(RadioButtonGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          onValueChange = _this$props.onValueChange,\n          children = _this$props.children;\n      return React.createElement(RadioButtonContext.Provider, {\n        value: {\n          value: value,\n          onValueChange: onValueChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        }\n      }, children);\n    }\n  }]);\n\n  return RadioButtonGroup;\n}(React.Component);\n\nRadioButtonGroup.displayName = 'RadioButton.Group';\nexport default RadioButtonGroup;","map":{"version":3,"sources":["RadioButtonGroup.tsx"],"names":["RadioButtonContext","React","RadioButtonGroup","Component","displayName","value","onValueChange","children"],"mappings":";;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAsBA,OAAO,IAAMA,kBAAkB,GAAGC,KAAK,CAALA,aAAAA,CAA3B,IAA2BA,CAA3B;;AAsCDC,IAAAA,gB;;;;;;;;;;;6BAGK;AAAA,UAAA,WAAA,GACoC,KADpC,KAAA;AAAA,UACCG,KADD,GAAA,WAAA,CAAA,KAAA;AAAA,UACQC,aADR,GAAA,WAAA,CAAA,aAAA;AAAA,UACuBC,QADvB,GAAA,WAAA,CAAA,QAAA;AAGP,aACE,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,EAAA;AAA6B,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAP,KAAA;AAASC,UAAAA,aAAa,EAA1D;AAAoC,SAApC;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EADF,QACE,CADF;;;;;EAN2BL,KAAK,CAACE,S,CAA/BD;;AAAAA,gB,CACGE,WADHF,GACiB,mBADjBA;AAcN,eAAA,gBAAA","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected radio button.\n   */\n  value: string;\n  /**\n   * React elements containing radio buttons.\n   */\n  children: React.ReactNode;\n};\n\nexport type RadioButtonContextType = {\n  value: string;\n  onValueChange: (item: string) => void;\n};\n\nexport const RadioButtonContext = React.createContext<RadioButtonContextType>(\n  null as any\n);\n\n/**\n * Radio button group allows to control a group of radio buttons.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     value: 'first',\n *   };\n *\n *   render() {\n *     return(\n *       <RadioButton.Group\n *         onValueChange={value => this.setState({ value })}\n *         value={this.state.value}\n *       >\n *         <View>\n *           <Text>First</Text>\n *           <RadioButton value=\"first\" />\n *         </View>\n *         <View>\n *           <Text>Second</Text>\n *           <RadioButton value=\"second\" />\n *         </View>\n *       </RadioButton.Group>\n *     )\n *   }\n * }\n *```\n */\nclass RadioButtonGroup extends React.Component<Props> {\n  static displayName = 'RadioButton.Group';\n\n  render() {\n    const { value, onValueChange, children } = this.props;\n\n    return (\n      <RadioButtonContext.Provider value={{ value, onValueChange }}>\n        {children}\n      </RadioButtonContext.Provider>\n    );\n  }\n}\n\nexport default RadioButtonGroup;\n"]},"metadata":{},"sourceType":"module"}