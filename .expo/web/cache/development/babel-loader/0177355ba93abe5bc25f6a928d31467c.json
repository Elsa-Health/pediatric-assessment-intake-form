{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTableHeader.tsx\";\nimport * as React from 'react';\nimport color from 'color';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableHeader = function (_React$Component) {\n  _inherits(DataTableHeader, _React$Component);\n\n  function DataTableHeader() {\n    _classCallCheck(this, DataTableHeader);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataTableHeader).apply(this, arguments));\n  }\n\n  _createClass(DataTableHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"style\", \"theme\"]);\n\n      var borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n      return React.createElement(View, _extends({}, rest, {\n        style: [styles.header, {\n          borderBottomColor: borderBottomColor\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }), children);\n    }\n  }]);\n\n  return DataTableHeader;\n}(React.Component);\n\nDataTableHeader.displayName = 'DataTable.Header';\nvar styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2\n  }\n});\nexport default withTheme(DataTableHeader);\nexport { DataTableHeader };","map":{"version":3,"sources":["DataTableHeader.tsx"],"names":["DataTableHeader","React","Component","displayName","children","style","theme","rest","borderBottomColor","color","styles","StyleSheet","header","flexDirection","height","paddingHorizontal","borderBottomWidth","withTheme"],"mappings":";;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,MAAA,OAAA;;;AAEA,SAAA,KAAA,EAAA,KAAA;AACA,SAAA,SAAA;;AAeMA,IAAAA,e;;;;;;;;;;;6BAGK;AAAA,UAAA,WAAA,GACqC,KADrC,KAAA;AAAA,UACCI,QADD,GAAA,WAAA,CAAA,QAAA;AAAA,UACWC,KADX,GAAA,WAAA,CAAA,KAAA;AAAA,UACkBC,KADlB,GAAA,WAAA,CAAA,KAAA;AAAA,UAC4BC,IAD5B,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AAEP,UAAMC,iBAAiB,GAAGC,KAAK,CAACH,KAAK,CAALA,IAAAA,GAAAA,KAAAA,GAANG,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAA1B,MAA0BA,EAA1B;AAKA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAgB,QAAA,KAAK,EAAE,CAACC,MAAM,CAAP,MAAA,EAAgB;AAAEF,UAAAA,iBAAiB,EAAnC;AAAgB,SAAhB,EAAvB,KAAuB,CAAvB;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EADF,QACE,CADF;;;;;EAV0BP,KAAK,CAACC,S,CAA9BF;;AAAAA,e,CACGG,WADHH,GACiB,kBADjBA;AAkBN,IAAMU,MAAM,GAAGC,UAAU,CAAVA,MAAAA,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,aAAa,EADP,KAAA;AAENC,IAAAA,MAAM,EAFA,EAAA;AAGNC,IAAAA,iBAAiB,EAHX,EAAA;AAINC,IAAAA,iBAAiB,EAAEL,UAAU,CAAVA,aAAAA,GALvB;AACU;AADuB,CAAlBA,CAAf;AASA,eAAeM,SAAS,CAAxB,eAAwB,CAAxB;AAGA,SAAA,eAAA","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Content of the `DataTableHeader`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTableHeader extends React.Component<Props> {\n  static displayName = 'DataTable.Header';\n\n  render() {\n    const { children, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <View {...rest} style={[styles.header, { borderBottomColor }, style]}>\n        {children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2,\n  },\n});\n\nexport default withTheme(DataTableHeader);\n\n// @component-docs ignore-next-line\nexport { DataTableHeader };\n"]},"metadata":{},"sourceType":"module"}