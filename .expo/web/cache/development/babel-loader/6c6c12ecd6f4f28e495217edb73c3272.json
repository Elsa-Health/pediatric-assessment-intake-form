{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Banner.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport Button from \"./Button\";\nimport Icon from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\nimport shadow from \"../styles/shadow\";\nvar ELEVATION = 1;\nvar DEFAULT_MAX_WIDTH = 960;\n\nvar Banner = function (_React$Component) {\n  _inherits(Banner, _React$Component);\n\n  function Banner() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Banner);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Banner)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      position: new Animated.Value(_this.props.visible ? 1 : 0),\n      layout: {\n        height: 0,\n        measured: false\n      }\n    };\n\n    _this.handleLayout = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var height = nativeEvent.layout.height;\n\n      _this.setState({\n        layout: {\n          height: height,\n          measured: true\n        }\n      });\n    };\n\n    _this.toggle = function () {\n      if (_this.props.visible) {\n        _this.show();\n      } else {\n        _this.hide();\n      }\n    };\n\n    _this.show = function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.position, {\n        duration: 250 * scale,\n        toValue: 1\n      }).start();\n    };\n\n    _this.hide = function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.position, {\n        duration: 200 * scale,\n        toValue: 0\n      }).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(Banner, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.toggle();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          icon = _this$props.icon,\n          children = _this$props.children,\n          actions = _this$props.actions,\n          contentStyle = _this$props.contentStyle,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"visible\", \"icon\", \"children\", \"actions\", \"contentStyle\", \"style\", \"theme\"]);\n\n      var _this$state = this.state,\n          position = _this$state.position,\n          layout = _this$state.layout;\n      var height = Animated.multiply(position, layout.height);\n      var translateY = Animated.multiply(Animated.add(position, -1), layout.height);\n      return React.createElement(Surface, _extends({}, rest, {\n        style: [styles.container, shadow(ELEVATION), style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        }\n      }), React.createElement(View, {\n        style: [styles.wrapper, contentStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          height: height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        }\n      }), React.createElement(Animated.View, {\n        onLayout: this.handleLayout,\n        style: [layout.measured || !visible ? [styles.absolute, {\n          transform: [{\n            translateY: translateY\n          }]\n        }] : null, !layout.measured && !visible ? {\n          opacity: 0\n        } : null],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }, React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        }\n      }, icon ? React.createElement(View, {\n        style: styles.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        }\n      }, React.createElement(Icon, {\n        source: icon,\n        size: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        }\n      })) : null, React.createElement(Text, {\n        style: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        }\n      }, children)), React.createElement(View, {\n        style: styles.actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        }\n      }, actions.map(function (_ref2, i) {\n        var label = _ref2.label,\n            others = _objectWithoutProperties(_ref2, [\"label\"]);\n\n        return React.createElement(Button, _extends({\n          key: i,\n          compact: true,\n          mode: \"text\",\n          style: styles.button\n        }, others, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          }\n        }), label);\n      })))));\n    }\n  }]);\n\n  return Banner;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0\n  },\n  icon: {\n    margin: 8\n  },\n  message: {\n    flex: 1,\n    margin: 8\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4\n  },\n  button: {\n    margin: 4\n  }\n});\nexport default withTheme(Banner);","map":{"version":3,"sources":["Banner.tsx"],"names":["ELEVATION","DEFAULT_MAX_WIDTH","Banner","React","Component","state","position","Animated","layout","height","measured","prevProps","handleLayout","nativeEvent","toggle","show","scale","duration","toValue","hide","visible","icon","children","actions","contentStyle","style","theme","rest","translateY","styles","shadow","transform","opacity","label","others","StyleSheet","container","elevation","wrapper","overflow","alignSelf","width","maxWidth","absolute","top","content","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","message","flex","button","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp, Animated } from 'react-native';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport Button from './Button';\nimport Icon, { IconSource } from './Icon';\nimport { withTheme } from '../core/theming';\nimport { Theme, $RemoveChildren } from '../types';\nimport shadow from '../styles/shadow';\n\nconst ELEVATION = 1;\nconst DEFAULT_MAX_WIDTH = 960;\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Whether banner is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Content that will be displayed inside banner.\n   */\n  children: string;\n  /**\n   * Icon to display for the `Banner`. Can be an image.\n   */\n  icon?: IconSource;\n  /**\n   * Action items to shown in the banner.\n   * An action item should contain the following properties:\n   *\n   * - `label`: label of the action button (required)\n   * - `onPress`: callback that is called when button is pressed (required)\n   *\n   * To customize button you can pass other props that button component takes.\n   */\n  actions: Array<{\n    label: string;\n    onPress: () => void;\n  }>;\n  /**\n   * Style of banner's inner content.\n   * Use this prop to apply custom width for wide layouts.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  position: Animated.Value;\n  layout: {\n    height: number;\n    measured: boolean;\n  };\n};\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\n/**\n * Banner displays a prominent message and related actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/banner.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Image } from 'react-native';\n * import { Banner } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: true,\n *   };\n *\n *   render() {\n *     return (\n *       <Banner\n *         visible={this.state.visible}\n *         actions={[\n *           {\n *             label: 'Fix it',\n *             onPress: () => this.setState({ visible: false }),\n *           },\n *           {\n *             label: 'Learn more',\n *             onPress: () => this.setState({ visible: false }),\n *           },\n *         ]}\n *         icon={({ size }) =>\n *           <Image\n *             source={{ uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4' }}\n *             style={{\n *               width: size,\n *               height: size,\n *             }}\n *           />\n *         }\n *       >\n *         There was a problem processing a transaction on your credit card.\n *       </Banner>\n *     );\n *   }\n * }\n * ```\n */\nclass Banner extends React.Component<Props, State> {\n  state = {\n    position: new Animated.Value(this.props.visible ? 1 : 0),\n    layout: {\n      height: 0,\n      measured: false,\n    },\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.toggle();\n    }\n  }\n\n  private handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n\n    this.setState({ layout: { height, measured: true } });\n  };\n\n  private toggle = () => {\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private show = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.position, {\n      duration: 250 * scale,\n      toValue: 1,\n    }).start();\n  };\n\n  private hide = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.position, {\n      duration: 200 * scale,\n      toValue: 0,\n    }).start();\n  };\n\n  render() {\n    const {\n      visible,\n      icon,\n      children,\n      actions,\n      contentStyle,\n      style,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      theme,\n      ...rest\n    } = this.props;\n    const { position, layout } = this.state;\n\n    // The banner animation has 2 parts:\n    // 1. Blank spacer element which animates its height to move the content\n    // 2. Actual banner which animates its translateY\n    // In initial render, we position everything normally and measure the height of the banner\n    // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n    // We need this because we need to move the content below as if banner's height was being animated\n    // However we can't animated banner's height directly as it'll also resize the content inside\n    const height = Animated.multiply(position, layout.height);\n\n    const translateY = Animated.multiply(\n      Animated.add(position, -1),\n      layout.height\n    );\n    return (\n      <Surface\n        {...rest}\n        style={[styles.container, shadow(ELEVATION) as ViewStyle, style]}\n      >\n        <View style={[styles.wrapper, contentStyle]}>\n          <Animated.View style={{ height }} />\n          <Animated.View\n            onLayout={this.handleLayout}\n            style={[\n              layout.measured || !visible\n                ? // If we have measured banner's height or it's invisible,\n                  // Position it absolutely, the layout will be taken care of the spacer\n                  [styles.absolute, { transform: [{ translateY }] }]\n                : // Otherwise position it normally\n                  null,\n              !layout.measured && !visible\n                ? // If we haven't measured banner's height yet and it's invisible,\n                  // hide it with opacity: 0 so user doesn't see it\n                  { opacity: 0 }\n                : null,\n            ]}\n          >\n            <View style={styles.content}>\n              {icon ? (\n                <View style={styles.icon}>\n                  {/*\n                  // @ts-ignore */}\n                  <Icon source={icon} size={40} />\n                </View>\n              ) : null}\n              <Text style={styles.message}>{children}</Text>\n            </View>\n            <View style={styles.actions}>\n              {actions.map(({ label, ...others }, i) => (\n                <Button\n                  key={/* eslint-disable-line react/no-array-index-key */ i}\n                  compact\n                  mode=\"text\"\n                  style={styles.button}\n                  {...others}\n                >\n                  {label}\n                </Button>\n              ))}\n            </View>\n          </Animated.View>\n        </View>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION,\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4,\n  },\n  button: {\n    margin: 4,\n  },\n});\n\nexport default withTheme(Banner);\n"]},"metadata":{},"sourceType":"module"}